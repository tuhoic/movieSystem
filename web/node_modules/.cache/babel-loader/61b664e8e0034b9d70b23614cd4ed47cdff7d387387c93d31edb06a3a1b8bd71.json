{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    model: $setup.form,\n    rules: $setup.rules,\n    ref: \"registerForm\",\n    \"label-position\": \"left\",\n    \"label-width\": \"120px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"用户名\",\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.username = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"邮箱\",\n      prop: \"email\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.email,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.email = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"密码\",\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: $setup.form.password,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.password = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"确认密码\",\n      prop: \"confirmPassword\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: $setup.form.confirmPassword,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.confirmPassword = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitForm\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"提交\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        onClick: $setup.resetForm\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"重置\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_form","model","$setup","form","rules","ref","_component_el_form_item","label","prop","_component_el_input","username","$event","email","type","password","confirmPassword","_component_el_button","onClick","submitForm","resetForm"],"sources":["D:\\graduate\\school\\project\\web\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-form\">\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"registerForm\" label-position=\"left\" label-width=\"120px\">\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input v-model=\"form.username\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\" prop=\"email\">\r\n        <el-input v-model=\"form.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n        <el-input type=\"password\" v-model=\"form.confirmPassword\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n        <el-button @click=\"resetForm\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { ElForm, ElFormItem, ElInput, ElButton } from 'element-plus';\r\n\r\nexport default {\r\n  name: 'RegisterForm',\r\n  components: { ElForm, ElFormItem, ElInput, ElButton },\r\n  setup() {\r\n    const form = ref({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    });\r\n\r\n    const rules = ref({\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        { min: 3, max: 20, message: '用户名长度在 3 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      email: [\r\n        { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n        { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' },\r\n        { min: 6, max: 20, message: '密码长度在 6 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      confirmPassword: [\r\n        { required: true, message: '请确认密码', trigger: 'blur' },\r\n        { validator: (rule, value, callback) => {\r\n            if (value === '') {\r\n              callback(new Error('请再次输入密码'));\r\n            } else if (value !== form.value.password) {\r\n              callback(new Error('两次输入的密码不一致'));\r\n            } else {\r\n              callback();\r\n            }\r\n          }, trigger: 'blur'\r\n        }\r\n      ]\r\n    });\r\n\r\n    const submitForm = () => {\r\n      const formRef = refs.registerForm;\r\n      formRef.validate((valid) => {\r\n        if (valid) {\r\n          console.log('提交成功');\r\n        } else {\r\n          console.log('表单验证失败');\r\n          return false;\r\n        }\r\n      });\r\n    };\r\n\r\n    const resetForm = () => {\r\n      const formRef = refs.registerForm;\r\n      formRef.resetFields();\r\n    };\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      submitForm,\r\n      resetForm\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.register-form {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;;;;;uBAA1BC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,YAAA,CAiBUC,kBAAA;IAjBAC,KAAK,EAAEC,MAAA,CAAAC,IAAI;IAAGC,KAAK,EAAEF,MAAA,CAAAE,KAAK;IAAEC,GAAG,EAAC,cAAc;IAAC,gBAAc,EAAC,MAAM;IAAC,aAAW,EAAC;;sBACzF,MAEe,CAFfN,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC;;wBAC7B,MAA6C,CAA7CT,YAAA,CAA6CU,mBAAA;oBAA1BP,MAAA,CAAAC,IAAI,CAACO,QAAQ;mEAAbR,MAAA,CAAAC,IAAI,CAACO,QAAQ,GAAAC,MAAA;;;QAElCZ,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;;wBAC5B,MAA0C,CAA1CT,YAAA,CAA0CU,mBAAA;oBAAvBP,MAAA,CAAAC,IAAI,CAACS,KAAK;mEAAVV,MAAA,CAAAC,IAAI,CAACS,KAAK,GAAAD,MAAA;;;QAE/BZ,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC;;wBAC5B,MAA6D,CAA7DT,YAAA,CAA6DU,mBAAA;QAAnDI,IAAI,EAAC,UAAU;oBAAUX,MAAA,CAAAC,IAAI,CAACW,QAAQ;mEAAbZ,MAAA,CAAAC,IAAI,CAACW,QAAQ,GAAAH,MAAA;;;QAElDZ,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC;;wBAC9B,MAAoE,CAApET,YAAA,CAAoEU,mBAAA;QAA1DI,IAAI,EAAC,UAAU;oBAAUX,MAAA,CAAAC,IAAI,CAACY,eAAe;mEAApBb,MAAA,CAAAC,IAAI,CAACY,eAAe,GAAAJ,MAAA;;;QAEzDZ,YAAA,CAGeO,uBAAA;wBAFb,MAA4D,CAA5DP,YAAA,CAA4DiB,oBAAA;QAAjDH,IAAI,EAAC,SAAS;QAAEI,OAAK,EAAEf,MAAA,CAAAgB;;0BAAY,MAAE,C,iBAAF,IAAE,E;;sCAChDnB,YAAA,CAA4CiB,oBAAA;QAAhCC,OAAK,EAAEf,MAAA,CAAAiB;MAAS;0BAAE,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}