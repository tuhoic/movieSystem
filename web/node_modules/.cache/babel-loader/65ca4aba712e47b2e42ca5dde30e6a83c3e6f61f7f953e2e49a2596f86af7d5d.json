{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/movies';\nexport default {\n  getAll() {\n    return axios.get(baseUrl).then(response => response.data);\n  },\n  getById(id) {\n    return axios.get(`${baseUrl}/${id}`).then(response => response.data);\n  },\n  create(data) {\n    return axios.post(baseUrl, data).then(response => response.data);\n  },\n  update(id, data) {\n    return axios.put(`${baseUrl}/${id}`, data).then(response => response.data);\n  },\n  delete(id) {\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data);\n  },\n  uploadPoster(id, file) {\n    const formData = new FormData();\n    formData.append('poster', file);\n    return axios.post(`${baseUrl}/${id}/poster`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => response.data);\n  }\n};","map":{"version":3,"names":["axios","baseUrl","getAll","get","then","response","data","getById","id","create","post","update","put","delete","uploadPoster","file","formData","FormData","append","headers"],"sources":["D:/graduate/school/project/web/src/api/movie.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/movies';\r\n\r\nexport default {\r\n    getAll() {\r\n        return axios.get(baseUrl).then((response) => response.data);\r\n    },\r\n    getById(id) {\r\n        return axios.get(`${baseUrl}/${id}`).then((response) => response.data);\r\n    },\r\n    create(data) {\r\n        return axios.post(baseUrl, data).then((response) => response.data);\r\n    },\r\n    update(id, data) {\r\n        return axios.put(`${baseUrl}/${id}`, data).then((response) => response.data);\r\n    },\r\n    delete(id) {\r\n        return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\r\n    },\r\n    uploadPoster(id, file) {\r\n        const formData = new FormData();\r\n        formData.append('poster', file);\r\n        return axios.post(`${baseUrl}/${id}/poster`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        }).then((response) => response.data);\r\n    },\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,aAAa;AAE7B,eAAe;EACXC,MAAMA,CAAA,EAAG;IACL,OAAOF,KAAK,CAACG,GAAG,CAACF,OAAO,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC/D,CAAC;EACDC,OAAOA,CAACC,EAAE,EAAE;IACR,OAAOR,KAAK,CAACG,GAAG,CAAE,GAAEF,OAAQ,IAAGO,EAAG,EAAC,CAAC,CAACJ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC1E,CAAC;EACDG,MAAMA,CAACH,IAAI,EAAE;IACT,OAAON,KAAK,CAACU,IAAI,CAACT,OAAO,EAAEK,IAAI,CAAC,CAACF,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACtE,CAAC;EACDK,MAAMA,CAACH,EAAE,EAAEF,IAAI,EAAE;IACb,OAAON,KAAK,CAACY,GAAG,CAAE,GAAEX,OAAQ,IAAGO,EAAG,EAAC,EAAEF,IAAI,CAAC,CAACF,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAChF,CAAC;EACDO,MAAMA,CAACL,EAAE,EAAE;IACP,OAAOR,KAAK,CAACa,MAAM,CAAE,GAAEZ,OAAQ,IAAGO,EAAG,EAAC,CAAC,CAACJ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC7E,CAAC;EACDQ,YAAYA,CAACN,EAAE,EAAEO,IAAI,EAAE;IACnB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,IAAI,CAAC;IAC/B,OAAOf,KAAK,CAACU,IAAI,CAAE,GAAET,OAAQ,IAAGO,EAAG,SAAQ,EAAEQ,QAAQ,EAAE;MACnDG,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CAACf,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACxC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}