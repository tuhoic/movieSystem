{"ast":null,"code":"import { ref } from 'vue';\nimport { ElForm, ElFormItem, ElInput, ElButton } from 'element-plus';\nexport default {\n  name: 'RegisterForm',\n  components: {\n    ElForm,\n    ElFormItem,\n    ElInput,\n    ElButton\n  },\n  setup() {\n    const form = ref({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const rules = ref({\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '用户名长度在 3 到 20 个字符',\n        trigger: 'blur'\n      }],\n      email: [{\n        required: true,\n        message: '请输入邮箱地址',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱地址',\n        trigger: ['blur', 'change']\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        max: 20,\n        message: '密码长度在 6 到 20 个字符',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        required: true,\n        message: '请确认密码',\n        trigger: 'blur'\n      }, {\n        validator: (rule, value, callback) => {\n          if (value === '') {\n            callback(new Error('请再次输入密码'));\n          } else if (value !== form.value.password) {\n            callback(new Error('两次输入的密码不一致'));\n          } else {\n            callback();\n          }\n        },\n        trigger: 'blur'\n      }]\n    });\n    const submitForm = () => {\n      const formRef = refs.registerForm;\n      formRef.validate(valid => {\n        if (valid) {\n          console.log('提交成功');\n        } else {\n          console.log('表单验证失败');\n          return false;\n        }\n      });\n    };\n    const resetForm = () => {\n      const formRef = refs.registerForm;\n      formRef.resetFields();\n    };\n    return {\n      form,\n      rules,\n      submitForm,\n      resetForm\n    };\n  }\n};","map":{"version":3,"names":["ref","ElForm","ElFormItem","ElInput","ElButton","name","components","setup","form","username","email","password","confirmPassword","rules","required","message","trigger","min","max","type","validator","rule","value","callback","Error","submitForm","formRef","refs","registerForm","validate","valid","console","log","resetForm","resetFields"],"sources":["D:\\graduate\\school\\project\\web\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-form\">\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"registerForm\" label-position=\"left\" label-width=\"120px\">\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input v-model=\"form.username\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\" prop=\"email\">\r\n        <el-input v-model=\"form.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n        <el-input type=\"password\" v-model=\"form.confirmPassword\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n        <el-button @click=\"resetForm\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { ElForm, ElFormItem, ElInput, ElButton } from 'element-plus';\r\n\r\nexport default {\r\n  name: 'RegisterForm',\r\n  components: { ElForm, ElFormItem, ElInput, ElButton },\r\n  setup() {\r\n    const form = ref({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    });\r\n\r\n    const rules = ref({\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        { min: 3, max: 20, message: '用户名长度在 3 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      email: [\r\n        { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n        { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' },\r\n        { min: 6, max: 20, message: '密码长度在 6 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      confirmPassword: [\r\n        { required: true, message: '请确认密码', trigger: 'blur' },\r\n        { validator: (rule, value, callback) => {\r\n            if (value === '') {\r\n              callback(new Error('请再次输入密码'));\r\n            } else if (value !== form.value.password) {\r\n              callback(new Error('两次输入的密码不一致'));\r\n            } else {\r\n              callback();\r\n            }\r\n          }, trigger: 'blur'\r\n        }\r\n      ]\r\n    });\r\n\r\n    const submitForm = () => {\r\n      const formRef = refs.registerForm;\r\n      formRef.validate((valid) => {\r\n        if (valid) {\r\n          console.log('提交成功');\r\n        } else {\r\n          console.log('表单验证失败');\r\n          return false;\r\n        }\r\n      });\r\n    };\r\n\r\n    const resetForm = () => {\r\n      const formRef = refs.registerForm;\r\n      formRef.resetFields();\r\n    };\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      submitForm,\r\n      resetForm\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.register-form {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAwBA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,QAAO,QAAS,cAAc;AAEpE,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IAAEL,MAAM;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAS,CAAC;EACrDG,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIR,GAAG,CAAC;MACfS,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEF,MAAMC,KAAI,GAAIb,GAAG,CAAC;MAChBS,QAAQ,EAAE,CACR;QAAEK,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,mBAAmB;QAAEC,OAAO,EAAE;MAAO,EAClE;MACDN,KAAK,EAAE,CACL;QAAEI,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAO,CAAC,EACvD;QAAEG,IAAI,EAAE,OAAO;QAAEJ,OAAO,EAAE,YAAY;QAAEC,OAAO,EAAE,CAAC,MAAM,EAAE,QAAQ;MAAE,EACrE;MACDL,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAO,EACjE;MACDJ,eAAe,EAAE,CACf;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEI,SAAS,EAAEA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;UACpC,IAAID,KAAI,KAAM,EAAE,EAAE;YAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;UAChC,OAAO,IAAIF,KAAI,KAAMd,IAAI,CAACc,KAAK,CAACX,QAAQ,EAAE;YACxCY,QAAQ,CAAC,IAAIC,KAAK,CAAC,YAAY,CAAC,CAAC;UACnC,OAAO;YACLD,QAAQ,EAAE;UACZ;QACF,CAAC;QAAEP,OAAO,EAAE;MACd;IAEJ,CAAC,CAAC;IAEF,MAAMS,UAAS,GAAIA,CAAA,KAAM;MACvB,MAAMC,OAAM,GAAIC,IAAI,CAACC,YAAY;MACjCF,OAAO,CAACG,QAAQ,CAAEC,KAAK,IAAK;QAC1B,IAAIA,KAAK,EAAE;UACTC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACrB,OAAO;UACLD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;UACrB,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,SAAQ,GAAIA,CAAA,KAAM;MACtB,MAAMP,OAAM,GAAIC,IAAI,CAACC,YAAY;MACjCF,OAAO,CAACQ,WAAW,EAAE;IACvB,CAAC;IAED,OAAO;MACL1B,IAAI;MACJK,KAAK;MACLY,UAAU;MACVQ;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}