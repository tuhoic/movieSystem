{"ast":null,"code":"import { defineComponent, vModelText, computed, reactive, toRefs, provide, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, renderSlot, createCommentVNode, normalizeStyle, toDisplayString, createBlock, Fragment, renderList, withKeys, resolveDynamicComponent, vShow, normalizeProps, guardReactiveProps } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../directives/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../constants/index.mjs';\nimport ElSelectMenu from './select-dropdown.mjs';\nimport useSelect from './useSelect.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport { SelectProps } from './defaults.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { isArray } from '@vue/shared';\nconst _sfc_main = defineComponent({\n  name: \"ElSelectV2\",\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside,\n    ModelText: vModelText\n  },\n  props: SelectProps,\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n  setup(props, {\n    emit\n  }) {\n    const modelValue = computed(() => {\n      const {\n        modelValue: rawModelValue,\n        multiple\n      } = props;\n      const fallback = multiple ? [] : void 0;\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback;\n      }\n      return multiple ? fallback : rawModelValue;\n    });\n    const API = useSelect(reactive({\n      ...toRefs(props),\n      modelValue\n    }), emit);\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue\n      }),\n      popper: API.popper,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect\n    });\n    return {\n      ...API,\n      modelValue\n    };\n  }\n});\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"id\", \"autocomplete\", \"aria-expanded\", \"aria-labelledby\", \"disabled\", \"readonly\", \"name\", \"unselectable\"];\nconst _hoisted_3 = [\"textContent\"];\nconst _hoisted_4 = [\"id\", \"aria-labelledby\", \"aria-expanded\", \"autocomplete\", \"disabled\", \"name\", \"readonly\", \"unselectable\"];\nconst _hoisted_5 = [\"textContent\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n  const _directive_model_text = resolveDirective(\"model-text\");\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectRef\",\n    class: normalizeClass([_ctx.nsSelectV2.b(), _ctx.nsSelectV2.m(_ctx.selectSize)]),\n    onClick: _cache[25] || (_cache[25] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"])),\n    onMouseenter: _cache[26] || (_cache[26] = $event => _ctx.states.comboBoxHovering = true),\n    onMouseleave: _cache[27] || (_cache[27] = $event => _ctx.states.comboBoxHovering = false)\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"popper\",\n    visible: _ctx.dropdownMenuVisible,\n    teleported: _ctx.teleported,\n    \"popper-class\": [_ctx.nsSelectV2.e(\"popper\"), _ctx.popperClass],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    effect: _ctx.effect,\n    placement: _ctx.placement,\n    pure: \"\",\n    transition: `${_ctx.nsSelectV2.namespace.value}-zoom-in-top`,\n    trigger: \"click\",\n    persistent: _ctx.persistent,\n    onBeforeShow: _ctx.handleMenuEnter,\n    onHide: _cache[24] || (_cache[24] = $event => _ctx.states.inputValue = _ctx.states.displayInputValue)\n  }, {\n    default: withCtx(() => {\n      var _a;\n      return [createElementVNode(\"div\", {\n        ref: \"selectionRef\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"wrapper\"), _ctx.nsSelectV2.is(\"focused\", _ctx.states.isComposing || _ctx.expanded), _ctx.nsSelectV2.is(\"hovering\", _ctx.states.comboBoxHovering), _ctx.nsSelectV2.is(\"filterable\", _ctx.filterable), _ctx.nsSelectV2.is(\"disabled\", _ctx.selectDisabled)])\n      }, [_ctx.$slots.prefix ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"prefix\")])) : createCommentVNode(\"v-if\", true), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selection\"))\n      }, [_ctx.collapseTags && _ctx.modelValue.length > 0 ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n      }, [createVNode(_component_el_tag, {\n        closable: !_ctx.selectDisabled && !((_a = _ctx.states.cachedOptions[0]) == null ? void 0 : _a.disable),\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\",\n        onClose: _cache[0] || (_cache[0] = $event => _ctx.deleteTag($event, _ctx.states.cachedOptions[0]))\n      }, {\n        default: withCtx(() => {\n          var _a2;\n          return [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString((_a2 = _ctx.states.cachedOptions[0]) == null ? void 0 : _a2.label), 7)];\n        }),\n        _: 1\n      }, 8, [\"closable\", \"size\"]), _ctx.modelValue.length > 1 ? (openBlock(), createBlock(_component_el_tag, {\n        key: 0,\n        closable: false,\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\"\n      }, {\n        default: withCtx(() => [_ctx.collapseTagsTooltip ? (openBlock(), createBlock(_component_el_tooltip, {\n          key: 0,\n          disabled: _ctx.dropdownMenuVisible,\n          \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n          effect: _ctx.effect,\n          placement: \"bottom\",\n          teleported: false\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, \"+ \" + toDisplayString(_ctx.modelValue.length - 1), 7)]),\n          content: withCtx(() => [createElementVNode(\"div\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"selection\"))\n          }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.states.cachedOptions.slice(1), (selected, idx) => {\n            return openBlock(), createElementBlock(\"div\", {\n              key: idx,\n              class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n            }, [(openBlock(), createBlock(_component_el_tag, {\n              key: _ctx.getValueKey(selected),\n              closable: !_ctx.selectDisabled && !selected.disabled,\n              size: _ctx.collapseTagSize,\n              class: \"in-tooltip\",\n              type: \"info\",\n              \"disable-transitions\": \"\",\n              onClose: $event => _ctx.deleteTag($event, selected)\n            }, {\n              default: withCtx(() => [createElementVNode(\"span\", {\n                class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n                style: normalizeStyle({\n                  maxWidth: `${_ctx.tagMaxWidth}px`\n                })\n              }, toDisplayString(_ctx.getLabel(selected)), 7)]),\n              _: 2\n            }, 1032, [\"closable\", \"size\", \"onClose\"]))], 2);\n          }), 128))], 2)]),\n          _: 1\n        }, 8, [\"disabled\", \"effect\"])) : (openBlock(), createElementBlock(\"span\", {\n          key: 1,\n          class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n          style: normalizeStyle({\n            maxWidth: `${_ctx.tagMaxWidth}px`\n          })\n        }, \"+ \" + toDisplayString(_ctx.modelValue.length - 1), 7))]),\n        _: 1\n      }, 8, [\"size\"])) : createCommentVNode(\"v-if\", true)], 2)) : (openBlock(true), createElementBlock(Fragment, {\n        key: 1\n      }, renderList(_ctx.states.cachedOptions, (selected, idx) => {\n        return openBlock(), createElementBlock(\"div\", {\n          key: idx,\n          class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n        }, [(openBlock(), createBlock(_component_el_tag, {\n          key: _ctx.getValueKey(selected),\n          closable: !_ctx.selectDisabled && !selected.disabled,\n          size: _ctx.collapseTagSize,\n          type: \"info\",\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, selected)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString(_ctx.getLabel(selected)), 7)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"onClose\"]))], 2);\n      }), 128)), createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")]),\n        style: normalizeStyle(_ctx.inputWrapperStyle)\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        autocomplete: _ctx.autocomplete,\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        autocapitalize: \"off\",\n        \"aria-expanded\": _ctx.expanded,\n        \"aria-labelledby\": _ctx.label,\n        class: normalizeClass([_ctx.nsSelectV2.is(_ctx.selectSize), _ctx.nsSelectV2.e(\"combobox-input\")]),\n        disabled: _ctx.disabled,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        name: _ctx.name,\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args)),\n        onFocus: _cache[2] || (_cache[2] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onBlur: _cache[3] || (_cache[3] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),\n        onInput: _cache[4] || (_cache[4] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onCompositionstart: _cache[5] || (_cache[5] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[6] || (_cache[6] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[7] || (_cache[7] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onKeydown: [_cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[9] || (_cache[9] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[10] || (_cache[10] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[11] || (_cache[11] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"])), _cache[12] || (_cache[12] = withKeys(withModifiers((...args) => _ctx.handleDel && _ctx.handleDel(...args), [\"stop\"]), [\"delete\"]))]\n      }, null, 42, _hoisted_2), [[_directive_model_text, _ctx.states.displayInputValue]]), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass(_ctx.nsSelectV2.e(\"input-calculator\")),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_3)) : createCommentVNode(\"v-if\", true)], 6)], 2)) : (openBlock(), createElementBlock(Fragment, {\n        key: 2\n      }, [createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")])\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-labelledby\": _ctx.label,\n        \"aria-expanded\": _ctx.expanded,\n        autocapitalize: \"off\",\n        autocomplete: _ctx.autocomplete,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"combobox-input\")),\n        disabled: _ctx.disabled,\n        name: _ctx.name,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        onCompositionstart: _cache[13] || (_cache[13] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[14] || (_cache[14] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[15] || (_cache[15] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onFocus: _cache[16] || (_cache[16] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onBlur: _cache[17] || (_cache[17] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),\n        onInput: _cache[18] || (_cache[18] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onKeydown: [_cache[19] || (_cache[19] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[20] || (_cache[20] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[21] || (_cache[21] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[22] || (_cache[22] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"]))],\n        \"onUpdate:modelValue\": _cache[23] || (_cache[23] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args))\n      }, null, 42, _hoisted_4), [[_directive_model_text, _ctx.states.displayInputValue]])], 2), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-calculator\")]),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_5)) : createCommentVNode(\"v-if\", true)], 64)), _ctx.shouldShowPlaceholder ? (openBlock(), createElementBlock(\"span\", {\n        key: 3,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"placeholder\"), _ctx.nsSelectV2.is(\"transparent\", _ctx.multiple ? _ctx.modelValue.length === 0 : !_ctx.hasModelValue)])\n      }, toDisplayString(_ctx.currentPlaceholder), 3)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"suffix\"))\n      }, [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.iconReverse])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n        _: 1\n      }, 8, [\"class\"])), [[vShow, !_ctx.showClearBtn]]) : createCommentVNode(\"v-if\", true), _ctx.showClearBtn && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\")]),\n        onClick: withModifiers(_ctx.handleClear, [\"prevent\", \"stop\"])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.validateState && _ctx.validateIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 2,\n        class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsInput.e(\"validateIcon\")])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.validateIcon)))]),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 2)];\n    }),\n    content: withCtx(() => [createVNode(_component_el_select_menu, {\n      ref: \"menuRef\",\n      data: _ctx.filteredOptions,\n      width: _ctx.popperSize,\n      \"hovering-index\": _ctx.states.hoveringIndex,\n      \"scrollbar-always-on\": _ctx.scrollbarAlwaysOn\n    }, {\n      default: withCtx(scope => [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(scope)))]),\n      empty: withCtx(() => [renderSlot(_ctx.$slots, \"empty\", {}, () => [createElementVNode(\"p\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"empty\"))\n      }, toDisplayString(_ctx.emptyText ? _ctx.emptyText : \"\"), 3)])]),\n      _: 3\n    }, 8, [\"data\", \"width\", \"hovering-index\", \"scrollbar-always-on\"])]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"effect\", \"placement\", \"transition\", \"persistent\", \"onBeforeShow\"])], 34)), [[_directive_click_outside, _ctx.handleClickOutside, _ctx.popperRef]]);\n}\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select-v2/src/select.vue\"]]);\nexport { Select as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","ElSelectMenu","ElTag","ElTooltip","ElIcon","directives","ClickOutside","ModelText","vModelText","props","SelectProps","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","modelValue","computed","rawModelValue","multiple","fallback","isArray","API","useSelect","reactive","toRefs","provide","selectV2InjectionKey","height","popupHeight","popper","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","createElementBlock","ref","class","normalizeClass","_ctx","nsSelectV2","b","m","selectSize","onClick","_cache","withModifiers","args","toggleMenu","onMouseenter","$event","states","comboBoxHovering","onMouseleave","createVNode","_component_el_tooltip","visible","dropdownMenuVisible","teleported","e","popperClass","popperOptions","effect","placement","pure","transition","namespace","value","trigger","persistent","onBeforeShow","handleMenuEnter","onHide","inputValue","displayInputValue","default","withCtx","_a","createElementVNode","is","isComposing","expanded","filterable","$slots","prefix","openBlock","_hoisted_1","renderSlot","createCommentVNode","key","collapseTags","length","_component_el_tag","closable","selectDisabled","cachedOptions","disable","size","collapseTagSize","type","deleteTag","_a2","style","normalizeStyle","toDisplayString","label","_","createBlock","collapseTagsTooltip","disabled","maxWidth","tagMaxWidth","Fragment","renderList","slice","selected","idx","getValueKey","onClose","inputWrapperStyle","withDirectives","id","autocomplete","autocapitalize","role","readonly","spellcheck","unselectable","onUpdateInputValue","onFocus","handleFocus","onBlur","handleBlur","onInput","onCompositionstart","handleCompositionStart","onCompositionupdate","handleCompositionUpdate","onCompositionend","handleCompositionEnd","onKeydown","withKeys","handleEsc","handleDel","_hoisted_2","_directive_model_text","textContent","_hoisted_3","_hoisted_4","_hoisted_5","hasModelValue","currentPlaceholder","iconComponent","_component_el_icon","resolveDynamicComponent","vShow","showClearBtn","clearIcon","nsInput","validateState","validateIcon","content","_component_el_select_menu","data","filteredOptions","width","popperSize","hoveringIndex","scrollbarAlwaysOn","scope","normalizeProps","guardReactiveProps"],"sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelectV2.b(), nsSelectV2.m(selectSize)]\"\n    @click.stop=\"toggleMenu\"\n    @mouseenter=\"states.comboBoxHovering = true\"\n    @mouseleave=\"states.comboBoxHovering = false\"\n  >\n    <el-tooltip\n      ref=\"popper\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelectV2.e('popper'), popperClass]\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      :placement=\"placement\"\n      pure\n      :transition=\"`${nsSelectV2.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.inputValue = states.displayInputValue\"\n    >\n      <template #default>\n        <div\n          ref=\"selectionRef\"\n          :class=\"[\n            nsSelectV2.e('wrapper'),\n            nsSelectV2.is('focused', states.isComposing || expanded),\n            nsSelectV2.is('hovering', states.comboBoxHovering),\n            nsSelectV2.is('filterable', filterable),\n            nsSelectV2.is('disabled', selectDisabled),\n          ]\"\n        >\n          <div v-if=\"$slots.prefix\">\n            <slot name=\"prefix\" />\n          </div>\n          <div v-if=\"multiple\" :class=\"nsSelectV2.e('selection')\">\n            <template v-if=\"collapseTags && modelValue.length > 0\">\n              <div :class=\"nsSelectV2.e('selected-item')\">\n                <el-tag\n                  :closable=\"\n                    !selectDisabled && !states.cachedOptions[0]?.disable\n                  \"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, states.cachedOptions[0])\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ states.cachedOptions[0]?.label }}</span\n                  >\n                </el-tag>\n                <el-tag\n                  v-if=\"modelValue.length > 1\"\n                  :closable=\"false\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                >\n                  <el-tooltip\n                    v-if=\"collapseTagsTooltip\"\n                    :disabled=\"dropdownMenuVisible\"\n                    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                    :effect=\"effect\"\n                    placement=\"bottom\"\n                    :teleported=\"false\"\n                  >\n                    <template #default>\n                      <span\n                        :class=\"nsSelectV2.e('tags-text')\"\n                        :style=\"{\n                          maxWidth: `${tagMaxWidth}px`,\n                        }\"\n                        >+ {{ modelValue.length - 1 }}</span\n                      >\n                    </template>\n                    <template #content>\n                      <div :class=\"nsSelectV2.e('selection')\">\n                        <div\n                          v-for=\"(selected, idx) in states.cachedOptions.slice(\n                            1\n                          )\"\n                          :key=\"idx\"\n                          :class=\"nsSelectV2.e('selected-item')\"\n                        >\n                          <el-tag\n                            :key=\"getValueKey(selected)\"\n                            :closable=\"!selectDisabled && !selected.disabled\"\n                            :size=\"collapseTagSize\"\n                            class=\"in-tooltip\"\n                            type=\"info\"\n                            disable-transitions\n                            @close=\"deleteTag($event, selected)\"\n                          >\n                            <span\n                              :class=\"nsSelectV2.e('tags-text')\"\n                              :style=\"{\n                                maxWidth: `${tagMaxWidth}px`,\n                              }\"\n                              >{{ getLabel(selected) }}</span\n                            >\n                          </el-tag>\n                        </div>\n                      </div>\n                    </template>\n                  </el-tooltip>\n                  <span\n                    v-else\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >+ {{ modelValue.length - 1 }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n\n            <template v-else>\n              <div\n                v-for=\"(selected, idx) in states.cachedOptions\"\n                :key=\"idx\"\n                :class=\"nsSelectV2.e('selected-item')\"\n              >\n                <el-tag\n                  :key=\"getValueKey(selected)\"\n                  :closable=\"!selectDisabled && !selected.disabled\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, selected)\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ getLabel(selected) }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n              :style=\"inputWrapperStyle\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                :autocomplete=\"autocomplete\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-labelledby=\"label\"\n                :class=\"[\n                  nsSelectV2.is(selectSize),\n                  nsSelectV2.e('combobox-input'),\n                ]\"\n                :disabled=\"disabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @update:modelValue=\"onUpdateInputValue\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelectV2.e('input-calculator')\"\n                v-text=\"states.displayInputValue\"\n              />\n            </div>\n          </div>\n          <template v-else>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                :aria-labelledby=\"label\"\n                :aria-expanded=\"expanded\"\n                autocapitalize=\"off\"\n                :autocomplete=\"autocomplete\"\n                :class=\"nsSelectV2.e('combobox-input')\"\n                :disabled=\"disabled\"\n                :name=\"name\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @input=\"onInput\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @update:modelValue=\"onUpdateInputValue\"\n              />\n            </div>\n            <span\n              v-if=\"filterable\"\n              ref=\"calculatorRef\"\n              aria-hidden=\"true\"\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-calculator'),\n              ]\"\n              v-text=\"states.displayInputValue\"\n            />\n          </template>\n          <span\n            v-if=\"shouldShowPlaceholder\"\n            :class=\"[\n              nsSelectV2.e('placeholder'),\n              nsSelectV2.is(\n                'transparent',\n                multiple ? modelValue.length === 0 : !hasModelValue\n              ),\n            ]\"\n          >\n            {{ currentPlaceholder }}\n          </span>\n          <span :class=\"nsSelectV2.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon')]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon\"\n              :class=\"[nsInput.e('icon'), nsInput.e('validateIcon')]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </span>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template #empty>\n            <slot name=\"empty\">\n              <p :class=\"nsSelectV2.e('empty')\">\n                {{ emptyText ? emptyText : '' }}\n              </p>\n            </slot>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  provide,\n  reactive,\n  toRefs,\n  vModelText,\n} from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { selectV2InjectionKey } from './token'\nimport { SelectProps } from './defaults'\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside, ModelText: vModelText },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n      return multiple ? fallback : rawModelValue\n    })\n\n    const API = useSelect(\n      reactive({\n        ...toRefs(props),\n        modelValue,\n      }),\n      emit\n    )\n    // TODO, remove the any cast to align the actual API.\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue,\n      }),\n      popper: API.popper,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    } as any)\n\n    return {\n      ...API,\n      modelValue,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;AAyUA,MAAKA,SAAA,GAAaC,eAAa;EAC7BC,IAAM;EACNC,UAAY;IACVC,YAAA;IACAC,KAAA;IACAC,SAAA;IACAC;EAAA,CACF;EACAC,UAAY;IAAEC,YAAc;IAAAC,SAAA,EAAWC;EAAW;EAClDC,KAAO,EAAAC,WAAA;EACPC,KAAO,GACLC,kBAAA,EACAC,YAAA,EACA,cACA,SACA,kBACA,SACA,OACF;EAEAC,MAAML,KAAO;IAAEM;EAAQ;IACf,MAAAC,UAAA,GAAaC,QAAA,CAAS,MAAM;MAC1B;QAAED,UAAY,EAAAE,aAAA;QAAeC;MAAa,IAAAV,KAAA;MAC1C,MAAAW,QAAA,GAAWD,QAAW,KAAK;MAG7B,IAAAE,OAAA,CAAQH,aAAa,CAAG;QAC1B,OAAOC,QAAA,GAAWD,aAAgB,GAAAE,QAAA;MAAA;MAEpC,OAAOD,QAAA,GAAWC,QAAW,GAAAF,aAAA;IAAA,CAC9B;IAEK,MAAAI,GAAA,GAAMC,SAAA,CACVC,QAAS;MACP,GAAGC,MAAA,CAAOhB,KAAK;MACfO;IAAA,CACD,GACDD,IACF;IAEAW,OAAA,CAAQC,oBAAsB;MAC5BlB,KAAA,EAAOe,QAAS;QACd,GAAGC,MAAA,CAAOhB,KAAK;QACfmB,MAAA,EAAQN,GAAI,CAAAO,WAAA;QACZb;MAAA,CACD;MACDc,MAAA,EAAQR,GAAI,CAAAQ,MAAA;MACZC,QAAA,EAAUT,GAAI,CAAAS,QAAA;MACdC,OAAA,EAASV,GAAI,CAAAU,OAAA;MACbC,kBAAA,EAAoBX,GAAI,CAAAW,kBAAA;MACxBC,gBAAA,EAAkBZ,GAAI,CAAAY;IAAA,CAChB;IAED;MACL,GAAGZ,GAAA;MACHN;IAAA,CACF;EAAA;AAEJ,CAAC;;;;;;;;;;;;;;;sCAlYCmB,kBAkTM;IAjTJC,GAAI;IAEHC,KAAA,EAAKC,cAAG,EAAAC,IAAA,CAAAC,UAAA,CAAWC,CAAA,EAAK,EAAAF,IAAA,CAAAC,UAAA,CAAWE,CAAA,CAAEH,IAAU,CAAAI,UAAA;IAC/CC,OAAA,EAAKC,MAAA,SAAAA,MAAA,OAAAC,aAAA,KAAAC,IAAA,KAAOR,IAAU,CAAAS,UAAA,IAAAT,IAAA,CAAAS,UAAA,IAAAD,IAAA;IACtBE,YAAA,EAAUJ,MAAE,SAAAA,MAAA,OAAAK,MAAA,IAAAX,IAAA,CAAAY,MAAA,CAAOC,gBAAgB;IACnCC,YAAA,EAAUR,MAAE,SAAAA,MAAA,OAAAK,MAAA,IAAAX,IAAA,CAAAY,MAAA,CAAOC,gBAAgB;EAAA,IAEpCE,WAySa,CAAAC,qBAAA;IAxSXnB,GAAI;IACHoB,OAAS,EAAAjB,IAAA,CAAAkB,mBAAA;IACTC,UAAY,EAAAnB,IAAA,CAAAmB,UAAA;IACZ,cAAY,GAAGnB,IAAW,CAAAC,UAAA,CAAAmB,CAAA,CAAC,WAAYpB,IAAW,CAAAqB,WAAA;IAClD,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB,EAAArB,IAAA,CAAAsB,aAAA;IAChB,qBAAqB;IACrBC,MAAQ,EAAAvB,IAAA,CAAAuB,MAAA;IACRC,SAAW,EAAAxB,IAAA,CAAAwB,SAAA;IACZC,IAAA;IACCC,UAAA,EAAe,GAAA1B,IAAA,CAAAC,UAAA,CAAW0B,SAAU,CAAAC,KAAA;IACrCC,OAAQ;IACPC,UAAY,EAAA9B,IAAA,CAAA8B,UAAA;IACZC,YAAa,EAAA/B,IAAA,CAAAgC,eAAA;IACbC,MAAI,EAAA3B,MAAA,SAAAA,MAAA,OAAAK,MAAA,IAAEX,IAAO,CAAAY,MAAA,CAAAsB,UAAA,GAAalC,IAAO,CAAAY,MAAA,CAAAuB,iBAAA;EAAA;IAEvBC,OAAA,EAAOC,OAAA,CAChB,MAgQM;MAhQN,IAgQMC,EAAA;MAAA,OA/PA,CACHC,kBAAK;QAAgB1C,GAAA,gBAAY;QAAyBC,KAAW,EAAAC,cAAc,EAAwDC,IAAA,CAAAC,UAAA,CAAAmB,CAAE,CAAa,YAAsCpB,IAAA,CAAAC,UAAa,CAAAuC,EAAA,YAAAxC,IAAyB,CAAAY,MAAA,CAAA6B,WAAA,IAAAzC,IAAA,CAAA0C,QAAA,GAAe1C,IAAA,CAAAC,UAAa,CAAAuC,EAAA,WAAa,EAAcxC,IAAA,CAAAY,MAAA,CAAAC,gBAAA,GAAAb,IAAA,CAAAC,UAAA,CAAAuC,EAAA,eAAAxC,IAAA,CAAA2C,UAAA,G,oDAQnR;MAEL,GADkB,CAAA3C,IAAA,CAAA4C,MAAA,CAAAC,MAAA,IAAAC,SAAA,IAAAlD,kBAAA,QAAAmD,UAAA,GAEbC,UAAA,CAAAhD,IAAA,CAAA4C,MAAA,UA+JL,OAAAK,kBAAA,gBA/JgBjD,IAAK,CAAApB,QAAA,IAAAkE,SAAA,IAAAlD,kBAAc;QAAAsD,GAAA;QACPpD,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAiB,CAAAmB,CAAA;MAkFzC,IAjFApB,IAAK,CAAAmD,YAAA,IAAAnD,IAAA,CAAAvB,UAAA,CAAA2E,MAAc,QAAAN,SAAA,IAAAlD,kBAAA;QAAAsD,GAAA;QAiBdpD,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;MAAA,GAf0B,CAGhCL,WAAM,CAAAsC,iBAAA;QACFC,QAAA,GAAAtD,IAAA,CAAAuD,cAAA,OAAAjB,EAAA,GAAAtC,IAAA,CAAAY,MAAA,CAAA4C,aAAA,wBAAAlB,EAAA,CAAAmB,OAAA;QACLC,IAAA,EAAA1D,IAAA,CAAA2D,eAAA;QACMC,IAAA;QAAwC;wBAE9C,CAMC,MAAAtD,MAAA,MAAAK,MAAA,IAAAX,IAAA,CAAA6D,SAAA,CAAAlD,MAAA,EAAAX,IAAA,CAAAY,MAAA,CAAA4C,aAAA;MAAA;QALEpB,OAAA,EAAKC,OAAE;UACP,IAAKyB,GAAA;UAAuC,QAAAvB,kBAAA;iCAGlC,CAAAvC,IAAA,CAAAC,UAAA,CAAAmB,CAAa,YAAU;YAAA2C,KAAA,EAAAC,cAAA;;;WAInB,EAAAC,eAAA,EAAAH,GAAA,GAAA9D,IAAA,CAAAY,MA6DV,CAAA4C,aAAA,wBAAAM,GAAA,CAAAI,KAAA;SA5DI;QACJC,CAAA;MAAA,CACF,4BACLnE,IAAA,CAAAvB,UAAA,CAAA2E,MAAA,QAAAN,SAAA,IAAAsB,WAAA,CAAAf,iBAAA;QAAAH,GAAA;;QAGQQ,IAAA,EAAA1D,IAAA,CAAA2D,eAAA;QA6CKC,IAAA;6BA5CA;MAAA;QACWxB,OACb,EAAAC,OAAA,QACTrC,IAAU,CAAAqE,mBAAA,IAAAvB,SAAA,IAAAsB,WAAA,CAAApD,qBAAA;UACGkC,GAAA;UAAAoB,QAAA,EAAAtE,IAAA,CAAAkB,mBAAA;UAEF,qBAOR;UANDK,MAMC,EAAAvB,IAAA,CAAAuB,MAAA;UALEC,SAAK,EAAE;UAAYL,UACd;QAAA,CAA2C;UAAAiB,OAAA,EAAAC,OAAA,Q,kBAG9C;YAAoBvC,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;YAGhB2C,KAAA,EAAAC,cA2BH;cAAAO,QAAA,KAAAvE,IAAA,CAAAwE,WAAA;YAAA,CA1BA;UAAmB,UAAAP,eAAA,CAAAjE,IAAA,CAAAvB,UAAA,CAAA2E,MAAA,UACvB;kCAwBMb,kBApBE;YACLzC,KAAA,EAAAC,cAAO,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA,CAAW,WAAC;UAAA,K,eAEpB,EAgBSxB,kBAAA,CAAA6E,QAAA,QAAAC,UAAA,CAAA1E,IAAA,CAAAY,MAAA,CAAA4C,aAAA,CAAAmB,KAAA,MAAAC,QAAA,EAAAC,GAAA;YAfN,OAAK/B,SAAA,IAAAlD,kBAAoB;cACzBsD,GAAQ,EAAA2B,GAAA;cACR/E,KAAM,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;YAAA,GACD,EACD0B,SAAA,IAAAsB,WAAA,CAAAf,iBAAA;cACLH,GAAA,EAAAlD,IAAA,CAAA8E,WAAA,CAAAF,QAAA;cACMtB,QAAA,GAAAtD,IAAA,CAAAuD,cAAY,KAAAqB,QAAgB,CAAAN,QAAA;cAAAZ,IAAA,EAAA1D,IAAA,CAAA2D,eAAA;iCAQjC;cANDC,IAMC;cALE,qBAAO;cAAYmB,OACd,EAAApE,MAAA,IAAAX,IAAA,CAAA6D,SAAA,CAAAlD,MAAA,EAAAiE,QAAA;YAAA,CAAiD;cAAAxC,OAAA,EAAAC,OAAA,QAGnDE,kBAAA;gBAAiBzC,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;;;;;;;UAchC,UALO,KACA;UAAuC+C,CAAA;QAAA,kCAAArB,SAAA,IAAAlD,kBAAA;UAG1CsD,GAAA;UAAoBpD,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;;;UAO7B;iCAqBM,CAAApB,IAAA,CAAAvB,UAAA,CAAA2E,MAAA,WAnBE;QACLe,CAAA;MAAmB,mBAAAlB,kBAAA,e,kBAiBX,QAAArD,kBAAA,CAAA6E,QAAA;QAAAvB,GAAA;MAAA,GAAAwB,UAAA,CAAA1E,IAAA,CAAAY,MAAA,CAAA4C,aAAA,GAAAoB,QAAA,EAAAC,GAAA;QAdN,OAAK/B,SAAA,IAAAlD,kBAAoB;UACzBsD,GAAQ,EAAA2B,GAAA;UACR/E,KAAM,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;QAAA,GACF,EACL0B,SAAA,IAAAsB,WAAA,CAAAf,iBAAA;UACMH,GAAA,EAAAlD,IAAA,CAAA8E,WAAY,CAAAF,QAAA;UAAgBtB,QAAA,GAAAtD,IAAA,CAAAuD,cAAA,KAAAqB,QAAA,CAAAN,QAAA;oCAQjC;UANDV,IAMC;UALE,qBAAO;UAAYmB,OACd,EAAApE,MAAA,IAAAX,IAAA,CAAA6D,SAAA,CAAAlD,MAAA,EAAAiE,QAAA;QAAA,CAAuC;UAAAxC,OAAA,EAAAC,OAAA,QAGzCE,kBAAA;YAAiBzC,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;;;;0DAqDvB;UA/CE+C,CAAA;QAAA,oBAAgC;MAA+C,WAIpF5B,kBAAA,MAAwB;QAAAzC,KAAA,EAAAC,cAAA,E,eAmCvB,CAAAqB,CAAA,mBAhCKpB,IAAA,CAAAC,UAAA,CAAAmB,CAAA,kBACD;QAEH2C,KAAc,EAAAC,cAAA,CAAAhE,IAAA,CAAAgF,iBAAA;MAAA,GACG,CAClBC,cAAc,CAAA1C,kBAAA;QACC2C,EAAA,EAAAlF,IAAA,CAAAkF,EAAA;QACCrF,GAAA;QACEsF,YAAA,EAAAnF,IAAA,CAAAmF,YAAA;QACZ;QAAsB,0BAAwB;QAAqBC,cAAA,EAAW,KAAC;QAAA,iBAAApF,IAAA,CAAA0C,QAAA;QAI1E,mBAAA1C,IAAA,CAAAkE,KAAA;QACNpE,KAAA,EAAAC,cAAA,EAAAC,IAAA,CAAAC,UACO,CAAAuC,EAAA,CAAAxC,IAAA,CAAAI,UAAA,GACDJ,IAAA,CAAAC,UAAA,CAAAmB,CAAA,mBACN;QACEkD,QAAA,EAAAtE,IAAA,CAAAsE,QAAA;QACNe,IAAA;QAAgCC,QAAA,GAAAtF,IAAA,CAAA2C,UACb;QAAA4C,UACZ;QAAA3B,IAAA,EACH,MAAE;QAAApG,IAAA,EAAAwC,IACC,CAAAxC,IAAA;QAAAgI,YAAA,EAAAxF,IACS,CAAE0C,QAAA;QAAA,qBACC,EAAApC,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAAyF,kBAAA,IAAAzF,IAAA,CAAAyF,kBAAA,IAAAjF,IAAA;QAAAkF,OAAA,EAAApF,MAAA,CACL,CAAE,MAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAA2F,WAAA,IAAA3F,IAAA,CAAA2F,WAAA,IAAAnF,IAAA;QACToF,MAAA,EAAAtF,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAA6F,UAAA,IAAA7F,IAAA,CAAA6F,UAAA,IAAArF,IAAA;QAAAsF,OAAA,EAAAxF,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAA8F,OAAA,IAAoC9F,IAAA,CAAA8F,OAAA,IAAAtF,IAAA;QAAAuF,kBAAA,EAAAzF,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAChB,CAAkBgG,sBAAA,IAAAhG,IAAA,CAAAgG,sBAAA,IAAAxF,IAAA;QAAAyF,mBAAA,EAAA3F,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAAkG,uBACD,IAAAlG,IAAA,CAAAkG,uBAAA,IAAA1F,IAAA;QAAA2F,gBAAA,EAAA7F,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAAR,IAAA,CAAAoG,oBACT,IAAApG,IAAA,CAAAoG,oBAAA,IAAA5F,IAAA;QAAA6F,SAAA,GACL/F,MAAA,QAAAA,MAAA,MAAAgG,QAAA,CAAA/F,aAAA,CAAAI,MAAA,IAAAX,IAAA,CAAAN,kBAAA,8C,iIA7BjBY,MAAA,SAAAA,MAAA,OAAAgG,QAAwB,CAAA/F,aAAA,KAAAC,IAAA,KAAAR,IAAA,CAAAL,gBAAA,IAAAK,IAAA,CAAAL,gBAAA,IAAAa,IAAA,sCAAAF,MAAA,SAAAA,MAAA,OAAAgG,QAAA,CAAA/F,aAAA,KAAAC,IAAA,KAAAR,IAAA,CAAAuG,SAAA,IAAAvG,IAAA,CAAAuG,SAAA,IAAA/F,IAAA,oCAgChCF,MAAA,SAAAA,MAAA,OAKNgG,QAAA,CAAA/F,aAAA,KAAAC,IAAA,KAAAR,IAAA,CAAAwG,SAAA,IAAAxG,IAAA,CAAAwG,SAAA,IAAAhG,IAAA;OAJI,YAAAiG,UAAA,IACQ,CAAAC,qBAAA,EAAA1G,IAAA,CAAAY,MAAA,CAAAuB,iBAAA,EACX,GACDnC,IAAA,CAAA2C,UAAA,IAAAG,SAAA,EAAiC,EAAAlD,kBAAD;QAAAsD,GAAA;;6BAoD3B;QAXHpD,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;QAnCEuF,WAAA,EAAA1C,eAAA,CAAAjE,IAAA,CAAAY,MAAA,CAAAuB,iBAAA;MAAA,aAAAyE,UAAgC,KAAA3D,kBAAA,oBAA+C,SAAAH,SAAA,IAAAlD,kBAAA,CAAA6E,QAAA;QAAAvB,GAAA;MAAA,I;6BAkCnF,EA5BKlD,IAAA,CAAAC,UAAA,CAAAmB,CAAA,mBACDpB,IAAA,CAAAC,UAAA,CAAAmB,CAAA,kBAEc;MAAA,GACJ,CACb6D,cAAiB,CAAA1C,kBAAA;QACF2C,EAAA,EAAAlF,IAAA,CAAAkF,EAAA;QACDrF,GAAA;QACA;QACd,eAAO;QACG,mBAAAG,IAAA,CAAAkE,KAAA;QACJ,iBAAAlE,IAAA,CAAA0C,QAAA;QACF0C,cAAA;QAAAD,YACO,EAAAnF,IAAA,CAAAmF,YAAA;QACDrF,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;QACNkD,QAAA,EAAAtE,IAAA,CAAAsE,QAAA;QACJ9G,IAAA,EAAAwC,IAAA,CAAAxC,IAAA;QAAgC6H,IAAA;QACdC,QAAA,GAAAtF,IAAA,CAAA2C,UACC;QAAA4C,UAAA,SACH;QAAA3B,IAAA,QACT;QAAA4B,YACD,EAAAxF,IAAA,CAAA0C,QAAA;QAAAqD,kBACC,EAAAzF,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAAgG,sBAAA,IAAAhG,IAAA,CAAAgG,sBAAA,IAAAxF,IAAA;QACAyF,mBAAA,EAAA3F,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAAkG,uBAAA,IAAAlG,IAAA,CAAAkG,uBAAA,IAAA1F,IAAA;QAAA2F,gBAAA,EAAA7F,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAAoG,oBAAoC,IAAApG,IAAA,CAAAoG,oBAAA,IAAA5F,IAAA;QAAAkF,OAAA,EAAApF,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAA2F,WACE,IAAA3F,IAAA,CAAA2F,WAAA,IAAAnF,IAAA;QAAAoF,MAAA,EAAAtF,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAA6F,UAAA,IACD7F,IAAA,CAAA6F,UAAA,IAAArF,IAAA;QAAAsF,OAAA,EAAAxF,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAA8F,OAAA,IAClB9F,IAAS,CAAA8F,OAAA,IAAAtF,IAAA;QAAA6F,SAAA,GACnC/F,MAAA,SAAAA,MAAmB,OAAAgG,QAAA,CAAA/F,aAAA,CAAAI,MAAA,IAAAX,IAAA,CAAAN,kBAAA,8CAAAY,MAAA,SAAAA,MAAA,OAAAgG,QAAA,CAAA/F,aAAA,CAAAI,MAAA,IAAAX,IAAA,CAAAN,kBAAA,+CAzBNY,MAAA,SAAAA,MAAA,OAAAgG,QAAwB,CAAA/F,aAAA,KAAAC,IAAA,KAAAR,IAAA,CAAAL,gBAAA,IAAAK,IAAA,CAAAL,gBAAA,IAAAa,IAAA,sCAAAF,MAAA,SAAAA,MAAA,OAAAgG,QAAA,CAAA/F,aAAA,KAAAC,IAAA,KAAAR,IAAA,CAAAuG,SAAA,IAAAvG,IAAA,CAAAuG,SAAA,IAAA/F,IAAA,mC;QA6BlC,uBAAAF,MAQN,SAAAA,MAAA,WAAAE,IAAA,KAAAR,IAAA,CAAAyF,kBAAA,IAAAzF,IAAA,CAAAyF,kBAAA,IAAAjF,IAAA;MAAA,aAAAqG,UAAA,IAPI,CAAAH,qBAAA,EAAA1G,IAAA,CAAAY,MAAA,CAAAuB,iBAAA,EACQ,EACN,MAAAnC,IAAA,CAAA2C,UAAA,IAAgCG,SAAA,IAAAlD,kBAAA;QAAmCsD,GAAA;QAAYrD,GAAA;qBAI7E;QAAwBC,KAAA,EAAAC,cAAA,E,oCAI5BC,IAAA,CAAAC,UAAA,CAAAmB,CAAA,mBADR,CAWO;QATCuF,WAAA,EAAA1C,eAAA,CAAAjE,IAAA,CAAAY,MAAA,CAAAuB,iBAAA;MAAA,aAAA2E,UAA8B,KAAA7D,kBAAA,iBAA0C,M;;QA+BzEnD,KAAA,EAAAC,cAAA,EArBAC,IAAO,CAAAC,UAAA,CAAAmB,CAAA,iBAAYpB,IAAA,CAAAC,UAAA,CAAAuC,EAAA,gBAAAxC,IAAA,CAAApB,QAAA,GAAAoB,IAAA,CAAAvB,UAAA,CAAA2E,MAAA,UAAApD,IAAA,CAAA+G,aAAA,EAEhB;MAKE,GAAA9C,eAAA,CAAAjE,IAAA,CAAAgH,kBAAA,SAAA/D,kBAAA,gBAHPV,kBAAA,OAAQ,EAAW;QAA0CzC,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA;UAE9DpB,IAAA,CAAAiH,aAAA,GAAAhC,cAAA,EAAAnC,SAAA,IAAAsB,WAA6B,CAAA8C,kBAAA;QAAAhE,GAAA;;;iBAHRb,OAAA,SAAAS,SAAA,IAAAsB,WAAA,CAAA+C,uBAAA,CAAAnH,IAAA,CAAAiH,aAAA,IAMf;QAKE9C,CAAA;MAJP,OAAK,OAAG,MACR,CAAAiD,KAAK,GAAApH,IAAA,CAAAqH,YAA0B,MAAApE,kBAAA,gB,qBAEHjD,IAAA,CAAAsH,SAAA,IAAAxE,SAAA,IAAAsB,WAAA,CAAA8C,kBAAA;QAA7BhE,GAAA;QAAyBpD,KAAA,EAAAC,cAAA,EAAAC,IAAA,CAAAC,UAAA,CAAAmB,CAAA,WAAApB,IAAA,CAAAuH,OAAA,CAAAnG,CAAA;;;QAGnBgB,OAAA,EAAAC,OAAA,CAAiB,QAIfS,SAAA,IAAAsB,WAAA,CAAA+C,uBAAA,CAAAnH,IAAA,CAAAsH,SAAA,IAHP;QAAoCnD,CAAA;+BAEL,MAAAlB,kBAAA,gBAAhCjD,IAAA,CAAAwH,aAAA,IAAAxH,IAAA,CAAAyH,YAAA,IAAA3E,SAAA,EAAgB,EAAYsB,WAAA,CAAA8C,kBAAA;QAAAhE,GAAA;;;;QAKzBiB,CAAA;MAkBQ,oBAAAlB,kBAAA,eAhBX,KACG;IACC;IACgByE,OACF,EAAArF,OAAA,QAAAtB,WAAA,CAAA4G,yBAAA;MAEX9H,GAAO;MAChB+H,IAAA,EAAA5H,IAAA,CAAA6H,eAAA;MAAmBC,KAAA,EAAA9H,IAAA,CAAA+H,UAAA;MAEV,gBACT,EAIO/H,IAAA,CAAAY,MAAA,CAAAoH,aAAA;MAJP,uBAAAhI,IAAA,CAAAiI;IAIO;MAHD7F,OAAA,EAAAC,OAAO,CAAA6F,KAAA,KAAYlF,UAAA,CAAAhD,IAAA,CAAA4C,MAAA,aAAAuF,cACG,CAAAC,kBAAA,CAAAF,KAAA;;;;MAzSP/D,CAAA;IAAF,kE"},"metadata":{},"sourceType":"module","externalDependencies":[]}