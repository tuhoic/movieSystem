{"ast":null,"code":"import { reactive } from 'vue';\nimport { register } from '@/api/auth';\nexport default {\n  name: 'RegisterPage',\n  setup() {\n    const state = reactive({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      emailError: '',\n      passwordError: '',\n      isSubmitting: false\n    });\n    const handleSubmit = async () => {\n      if (!state.username || !state.email || !state.password || !state.confirmPassword) {\n        alert('所有字段均为必填');\n        return;\n      }\n      if (state.password !== state.confirmPassword) {\n        state.passwordError = '两次输入的密码不一致';\n        return;\n      }\n      state.emailError = '';\n      const response = await register(state.username, state.email, state.password);\n      if (response.status === 'success') {\n        alert('注册成功，请前往邮箱进行验证');\n      } else if (response.status === 'error') {\n        state.emailError = response.message;\n      }\n    };\n    return {\n      ...state,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["reactive","register","name","setup","state","username","email","password","confirmPassword","emailError","passwordError","isSubmitting","handleSubmit","alert","response","status","message"],"sources":["D:\\graduate\\school\\project\\web\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2>用户注册</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">用户名</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">邮箱</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"email\" required>\r\n        <div v-if=\"emailError\" class=\"error-message\">{{ emailError }}</div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">密码</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\">确认密码</label>\r\n        <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\r\n        <div v-if=\"passwordError\" class=\"error-message\">{{ passwordError }}</div>\r\n      </div>\r\n      <button type=\"submit\" :disabled=\"isSubmitting\">{{ isSubmitting ? '提交中...' : '注册' }}</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from 'vue';\r\nimport { register } from '@/api/auth';\r\n\r\nexport default {\r\n  name: 'RegisterPage',\r\n  setup() {\r\n    const state = reactive({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      emailError: '',\r\n      passwordError: '',\r\n      isSubmitting: false,\r\n    });\r\n\r\n    const handleSubmit = async () => {\r\n      if (!state.username || !state.email || !state.password || !state.confirmPassword) {\r\n        alert('所有字段均为必填');\r\n        return;\r\n      }\r\n\r\n      if (state.password !== state.confirmPassword) {\r\n        state.passwordError = '两次输入的密码不一致';\r\n        return;\r\n      }\r\n\r\n      state.emailError = '';\r\n\r\n      const response = await register(state.username, state.email, state.password);\r\n\r\n      if (response.status === 'success') {\r\n        alert('注册成功，请前往邮箱进行验证');\r\n      } else if (response.status === 'error') {\r\n        state.emailError = response.message;\r\n      }\r\n    };\r\n\r\n    return {\r\n      ...state,\r\n      handleSubmit,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"password\"] {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  background-color: #2196f3;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton[type=\"submit\"]:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  font-size: 0.8rem;\r\n  margin-top: 5px;\r\n}\r\n</style>"],"mappings":"AA4BA,SAASA,QAAO,QAAS,KAAK;AAC9B,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;MACrBK,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE;IAChB,CAAC,CAAC;IAEF,MAAMC,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACR,KAAK,CAACC,QAAO,IAAK,CAACD,KAAK,CAACE,KAAI,IAAK,CAACF,KAAK,CAACG,QAAO,IAAK,CAACH,KAAK,CAACI,eAAe,EAAE;QAChFK,KAAK,CAAC,UAAU,CAAC;QACjB;MACF;MAEA,IAAIT,KAAK,CAACG,QAAO,KAAMH,KAAK,CAACI,eAAe,EAAE;QAC5CJ,KAAK,CAACM,aAAY,GAAI,YAAY;QAClC;MACF;MAEAN,KAAK,CAACK,UAAS,GAAI,EAAE;MAErB,MAAMK,QAAO,GAAI,MAAMb,QAAQ,CAACG,KAAK,CAACC,QAAQ,EAAED,KAAK,CAACE,KAAK,EAAEF,KAAK,CAACG,QAAQ,CAAC;MAE5E,IAAIO,QAAQ,CAACC,MAAK,KAAM,SAAS,EAAE;QACjCF,KAAK,CAAC,gBAAgB,CAAC;MACzB,OAAO,IAAIC,QAAQ,CAACC,MAAK,KAAM,OAAO,EAAE;QACtCX,KAAK,CAACK,UAAS,GAAIK,QAAQ,CAACE,OAAO;MACrC;IACF,CAAC;IAED,OAAO;MACL,GAAGZ,KAAK;MACRQ;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}