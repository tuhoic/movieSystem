{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, useRouter } from 'vue';\nimport { register } from '@/api/auth';\nexport default {\n  name: 'RegisterForm',\n  setup() {\n    const username = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const router = useRouter();\n    const handleSubmit = async () => {\n      try {\n        await register(username.value, password.value, confirmPassword.value);\n        router.push('/login');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    return {\n      username,\n      password,\n      confirmPassword,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","register","name","setup","username","password","confirmPassword","router","handleSubmit","value","push","error","console"],"sources":["D:\\graduate\\school\\project\\web\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2 class=\"title\">用户注册</h2>\r\n    <form class=\"register-form\" @submit.prevent=\"handleSubmit\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">用户名</label>\r\n        <input type=\"text\" id=\"username\" v-model.trim=\"username\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">密码</label>\r\n        <input type=\"password\" id=\"password\" v-model.trim=\"password\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\">确认密码</label>\r\n        <input type=\"password\" id=\"confirmPassword\" v-model.trim=\"confirmPassword\" />\r\n      </div>\r\n      <button type=\"submit\">注册</button>\r\n      <router-link class=\"link\" to=\"/login\">已有账号，去登录</router-link>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, useRouter } from 'vue'\r\nimport { register } from '@/api/auth'\r\n\r\nexport default {\r\n  name: 'RegisterForm',\r\n  setup() {\r\n    const username = ref('')\r\n    const password = ref('')\r\n    const confirmPassword = ref('')\r\n    const router = useRouter()\r\n\r\n    const handleSubmit = async () => {\r\n      try {\r\n        await register(username.value, password.value, confirmPassword.value)\r\n        router.push('/login')\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n\r\n    return {\r\n      username,\r\n      password,\r\n      confirmPassword,\r\n      handleSubmit,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 50px 0;\r\n}\r\n\r\n.title {\r\n  margin-bottom: 40px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n}\r\n\r\n.register-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\ninput[type='text'],\r\ninput[type='password'] {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\nbutton[type='submit'] {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.link {\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: #007bff;\r\n}\r\n</style>\r\n"],"mappings":";AAuBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,SAASC,QAAO,QAAS,YAAW;AAEpC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIL,GAAG,CAAC,EAAE;IACvB,MAAMM,QAAO,GAAIN,GAAG,CAAC,EAAE;IACvB,MAAMO,eAAc,GAAIP,GAAG,CAAC,EAAE;IAC9B,MAAMQ,MAAK,GAAIP,SAAS,EAAC;IAEzB,MAAMQ,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMP,QAAQ,CAACG,QAAQ,CAACK,KAAK,EAAEJ,QAAQ,CAACI,KAAK,EAAEH,eAAe,CAACG,KAAK;QACpEF,MAAM,CAACG,IAAI,CAAC,QAAQ;MACtB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK;MACrB;IACF;IAEA,OAAO;MACLP,QAAQ;MACRC,QAAQ;MACRC,eAAe;MACfE;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}