{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5faf54d0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"register\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = [\"model\", \"rules\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"form-title\"\n}, \"注册\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    ref: \"form\",\n    model: $data.form,\n    rules: $data.rules,\n    class: \"form\"\n  }, [_hoisted_4, _createVNode(_component_el_form_item, {\n    label: \"用户名\",\n    prop: \"username\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_input, {\n      modelValue: $data.form.username,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.username = $event),\n      autocomplete: \"off\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_form_item, {\n    label: \"密码\",\n    prop: \"password\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_input, {\n      modelValue: $data.form.password,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.password = $event),\n      type: \"password\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_form_item, {\n    label: \"确认密码\",\n    prop: \"confirmPassword\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_input, {\n      modelValue: $data.form.confirmPassword,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.confirmPassword = $event),\n      type: \"password\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_form_item, {\n    label: \"邮箱\",\n    prop: \"email\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_input, {\n      modelValue: $data.form.email,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.email = $event),\n      autocomplete: \"off\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_form_item, null, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.submitForm\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"注册\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })], 8 /* PROPS */, _hoisted_3)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","ref","model","$data","form","rules","_hoisted_4","_createVNode","_component_el_form_item","label","prop","_component_el_input","username","$event","autocomplete","password","type","confirmPassword","email","_component_el_button","onClick","$options","submitForm"],"sources":["D:\\graduate\\project\\web\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"register\">\r\n    <div class=\"form-container\">\r\n      <form ref=\"form\" :model=\"form\" :rules=\"rules\" class=\"form\">\r\n        <h2 class=\"form-title\">注册</h2>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"form.password\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input v-model=\"form.confirmPassword\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\">注册</el-button>\r\n        </el-form-item>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        email: '',\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 6, max: 20, message: '用户名长度应在6到20个字符之间', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, max: 20, message: '密码长度应在6到20个字符之间', trigger: 'blur' },\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请确认密码', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (value !== this.form.password) {\r\n                callback(new Error('两次密码输入不一致'));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          { type: 'email', message: '邮箱格式不正确', trigger: 'blur' },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          // 表单验证通过，提交数据\r\n          // 通过Axios或其他方式向后端发送请求\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register {\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.form-container {\r\n  width: 400px;\r\n  padding: 20px;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n}\r\n\r\n.form-title {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.el-form-item__label {\r\n  width: 80px;\r\n  text-align: right;\r\n}\r\n\r\n.el-button {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAgB;;gEAEvBC,mBAAA,CAA8B;EAA1BD,KAAK,EAAC;AAAY,GAAC,IAAE;;;;;;uBAH/BE,mBAAA,CAqBM,OArBNC,UAqBM,GApBJF,mBAAA,CAmBM,OAnBNG,UAmBM,GAlBJH,mBAAA,CAiBO;IAjBDI,GAAG,EAAC,MAAM;IAAEC,KAAK,EAAEC,KAAA,CAAAC,IAAI;IAAGC,KAAK,EAAEF,KAAA,CAAAE,KAAK;IAAET,KAAK,EAAC;MAClDU,UAA8B,EAC9BC,YAAA,CAEeC,uBAAA;IAFDC,KAAK,EAAC,KAAK;IAACC,IAAI,EAAC;;sBAC7B,MAAgE,CAAhEH,YAAA,CAAgEI,mBAAA;kBAA7CR,KAAA,CAAAC,IAAI,CAACQ,QAAQ;iEAAbT,KAAA,CAAAC,IAAI,CAACQ,QAAQ,GAAAC,MAAA;MAAEC,YAAY,EAAC;;;MAEjDP,YAAA,CAEeC,uBAAA;IAFDC,KAAK,EAAC,IAAI;IAACC,IAAI,EAAC;;sBAC5B,MAA6D,CAA7DH,YAAA,CAA6DI,mBAAA;kBAA1CR,KAAA,CAAAC,IAAI,CAACW,QAAQ;iEAAbZ,KAAA,CAAAC,IAAI,CAACW,QAAQ,GAAAF,MAAA;MAAEG,IAAI,EAAC;;;MAEzCT,YAAA,CAEeC,uBAAA;IAFDC,KAAK,EAAC,MAAM;IAACC,IAAI,EAAC;;sBAC9B,MAAoE,CAApEH,YAAA,CAAoEI,mBAAA;kBAAjDR,KAAA,CAAAC,IAAI,CAACa,eAAe;iEAApBd,KAAA,CAAAC,IAAI,CAACa,eAAe,GAAAJ,MAAA;MAAEG,IAAI,EAAC;;;MAEhDT,YAAA,CAEeC,uBAAA;IAFDC,KAAK,EAAC,IAAI;IAACC,IAAI,EAAC;;sBAC5B,MAA6D,CAA7DH,YAAA,CAA6DI,mBAAA;kBAA1CR,KAAA,CAAAC,IAAI,CAACc,KAAK;iEAAVf,KAAA,CAAAC,IAAI,CAACc,KAAK,GAAAL,MAAA;MAAEC,YAAY,EAAC;;;MAE9CP,YAAA,CAEeC,uBAAA;sBADb,MAA4D,CAA5DD,YAAA,CAA4DY,oBAAA;MAAjDH,IAAI,EAAC,SAAS;MAAEI,OAAK,EAAEC,QAAA,CAAAC;;wBAAY,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}