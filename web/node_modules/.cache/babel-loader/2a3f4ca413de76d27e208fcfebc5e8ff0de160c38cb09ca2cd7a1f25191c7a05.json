{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    model: $setup.form,\n    rules: $setup.rules,\n    ref: $setup.registerFormRef,\n    \"label-position\": \"left\",\n    \"label-width\": \"120px\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 省略其他表单项 \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_form","model","$setup","form","rules","ref","registerFormRef","_createCommentVNode"],"sources":["D:\\graduate\\school\\project\\web\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-form\">\r\n    <el-form :model=\"form\" :rules=\"rules\" :ref=\"registerFormRef\" label-position=\"left\" label-width=\"120px\">\r\n      <!-- 省略其他表单项 -->\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { ElForm, ElFormItem, ElInput, ElButton } from 'element-plus';\r\n\r\nexport default {\r\n  name: 'RegisterForm',\r\n  components: { ElForm, ElFormItem, ElInput, ElButton },\r\n  setup() {\r\n    const form = ref({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    });\r\n\r\n    const rules = ref({\r\n      // 省略其他验证规则\r\n    });\r\n\r\n    const registerFormRef = ref(null);\r\n\r\n    const submitForm = () => {\r\n      const formRef = registerFormRef.value;\r\n      formRef.validate((valid) => {\r\n        if (valid) {\r\n          console.log('提交成功');\r\n        } else {\r\n          console.log('表单验证失败');\r\n          return false;\r\n        }\r\n      });\r\n    };\r\n\r\n    const resetForm = () => {\r\n      const formRef = registerFormRef.value;\r\n      formRef.resetFields();\r\n    };\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      registerFormRef,\r\n      submitForm,\r\n      resetForm\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.register-form {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;;uBAA1BC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,YAAA,CAEUC,kBAAA;IAFAC,KAAK,EAAEC,MAAA,CAAAC,IAAI;IAAGC,KAAK,EAAEF,MAAA,CAAAE,KAAK;IAAGC,GAAG,EAAEH,MAAA,CAAAI,eAAe;IAAE,gBAAc,EAAC,MAAM;IAAC,aAAW,EAAC;;sBAC7F,MAAgB,CAAhBC,mBAAA,aAAgB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}